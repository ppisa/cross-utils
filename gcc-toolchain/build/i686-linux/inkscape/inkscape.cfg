# `configure' configures inkscape 0.41+devel to adapt to many kinds of systems.
# 
# Usage: ./configure [OPTION]... [VAR=VALUE]...
# 
# To assign environment variables (e.g., CC, CFLAGS...), specify them as
# VAR=VALUE.  See below for descriptions of some of the useful variables.
# 
# Defaults for the options are specified in brackets.
# 
# Configuration:
#   -h, --help              display this help and exit
#       --help=short        display options specific to this package
#       --help=recursive    display the short help of all the included packages
#   -V, --version           display version information and exit
#   -q, --quiet, --silent   do not print `checking...' messages
#       --cache-file=FILE   cache test results in FILE [disabled]
#   -C, --config-cache      alias for `--cache-file=config.cache'
#   -n, --no-create         do not create output files
#       --srcdir=DIR        find the sources in DIR [configure dir or `..']
# 
# Installation directories:
#   --prefix=PREFIX         install architecture-independent files in PREFIX
# 			  [/usr/local]
#   --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
# 			  [PREFIX]
# 
# By default, `make install' will install all the files in
# `/usr/local/bin', `/usr/local/lib' etc.  You can specify
# an installation prefix other than `/usr/local' using `--prefix',
# for instance `--prefix=$HOME'.
# 
# For better control, use the options below.
# 
# Fine tuning of the installation directories:
#   --bindir=DIR           user executables [EPREFIX/bin]
#   --sbindir=DIR          system admin executables [EPREFIX/sbin]
#   --libexecdir=DIR       program executables [EPREFIX/libexec]
#   --datadir=DIR          read-only architecture-independent data [PREFIX/share]
#   --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
#   --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
#   --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
#   --libdir=DIR           object code libraries [EPREFIX/lib]
#   --includedir=DIR       C header files [PREFIX/include]
#   --oldincludedir=DIR    C header files for non-gcc [/usr/include]
#   --infodir=DIR          info documentation [PREFIX/info]
#   --mandir=DIR           man documentation [PREFIX/man]
# 
# Program names:
#   --program-prefix=PREFIX            prepend PREFIX to installed program names
#   --program-suffix=SUFFIX            append SUFFIX to installed program names
#   --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
# 
# System types:
#   --build=BUILD     configure for building on BUILD [guessed]
#   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
# 
# Optional Features:
#   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
#   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
#   --disable-dependency-tracking  speeds up one-time build
#   --enable-dependency-tracking   do not reject slow dependency extractors
#   --enable-shared[=PKGS]
#                           build shared libraries [default=yes]
#   --enable-static[=PKGS]
#                           build static libraries [default=yes]
#   --enable-fast-install[=PKGS]
#                           optimize for fast installation [default=yes]
#   --disable-libtool-lock  avoid locking (might break parallel builds)
#   --enable-binreloc       compile with binary relocation support
#   --enable-osxapp         compile with OSX .app data dir paths
#   --disable-mmx     Don't use MMX optimization default=auto
# 
# Optional Packages:
#   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
#   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
#   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
#   --with-pic              try to use only PIC/non-PIC objects [default=use
#                           both]
#   --with-tags[=TAGS]
#                           include additional configurations [automatic]
#   --with-xft              use xft scalable font database (default is auto)
#   --with-gnome-print      use gnome print font database and spooler frontend
#   --with-gnome-vfs        use gnome vfs for loading files
#   --without-inkjar        disable openoffice files (SVG jars)
#   --with-perl             use Perl for embedded scripting
#   --with-python           use Python for embedded scripting
# 
# Some influential environment variables:
#   CC          C compiler command
#   CFLAGS      C compiler flags
#   LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
#               nonstandard directory <lib dir>
#   CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
#               headers in a nonstandard directory <include dir>
#   CXX         C++ compiler command
#   CXXFLAGS    C++ compiler flags
#   CCAS        assembler compiler command (defaults to CC)
#   CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
#   CXXCPP      C++ preprocessor
#   CPP         C preprocessor
#   F77         Fortran 77 compiler command
#   FFLAGS      Fortran 77 compiler flags
# 
# Use these variables to override the choices made by `configure' or to help
# it to find libraries and programs with nonstandard names/locations.

#CFLAGS=-I/opt/poppler/include
#LDFLAGS=-L/opt/poppler/lib

if [ -n "${PKG_CONFIG_PATH}" ] ; then
  PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:"
fi

export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}/opt/poppler/lib/pkgconfig:/opt/cairo/lib/pkgconfig"

export LDFLAGS="${LDFLAGS} -L/opt/poppler/lib/pkgconfig -L/opt/cairo/lib/pkgconfig"
export CFLAGS="${CFLAGS} -I/opt/poppler/include -I/opt/cairo/include"
export CXXFLAGS="${CXXFLAGS} -I/opt/poppler/include -I/opt/cairo/include"

../../../src/inkscape/configure --prefix=/opt/inkscape --exec-prefix=/opt/inkscape --with-python \
    --with-poppler=yes --without-boost

make 2>&1 | tee m
